// This sets up the dependencies for the build script *itself*, not the package.
buildscript {
    // Work around a defect in the 'android-library' plugin's version check
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}


apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = "com.lightstep.tracer"

def siteUrl = 'https://github.com/lightstep/lightstep-tracer-java'
def gitUrl = 'https://github.com/lightstep/lightstep-tracer-java.git'

android {
    compileSdkVersion 18
    buildToolsVersion "22.0.1"
    resourcePrefix "lightstep__"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 2
        versionName version
    }

    buildTypes {
    }

    lintOptions {
        lintConfig file("lightstep-tracer-android/lint.xml")
    }

    compileOptions {
        targetCompatibility = '1.7'
        sourceCompatibility = '1.7'
    }
}

Properties properties = new Properties()

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "lightstep-tracer-android"
        userOrg = 'lightstep'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['MIT']
        publicDownloadNumbers = true
        publish = true
        version {
            name = current_version
            released = new Date()

            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
            }

            // See https://github.com/bintray/bintray-examples/blob/master/gradle-example/build.gradle
            mavenCentralSync {
                sync = true
                user = System.getenv('MAVEN_CENTRAL_USER_TOKEN')
                password = System.getenv('MAVEN_CENTRAL_TOKEN_PASSWORD')
                close = '1'
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                name 'The LightStep OpenTracing Implementation for Android'
                description = 'The LightStep OpenTracing Tracer implementation for Java'
                url siteUrl

                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'lightstep'
                        name 'LightStep'
                        email 'hello@lightstep.com'
                    }
                }
                scm {
                    connection 'https://github.com/lightstep/lightstep-tracer-java'
                    developerConnection 'https://github.com/lightstep/lightstep-tracer-java'
                    url 'https://github.com/lightstep/lightstep-tracer-java'
                }
            }
        }
    }
}

repositories {
    jcenter()
    maven {
        // published beta artifacts of opentracing API
        url  "http://oss.jfrog.org/oss-snapshot-local/"
    }
}

dependencies {
    compile(project(':common')) {
        // Not needed on Android
        exclude module: 'httpclient'
    }
}

task sourcesJar(type: Jar) {
    from {
        android.sourceSets.main.java.srcDirs
        configurations.compile.collect { it.isDirectory()? it : zipTree(it) }
    }
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
